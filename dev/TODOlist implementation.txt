Goal for today

check if printing matrices is wrong
draw draftform
	draw vertices
	draw current mouse position
update render context
	add uninstanceable groups to render context
	add rendering properties (depth buffer and shit)
	add lights
convert drawings to entities
	mat4 project and unproject
	probably matrix inversion as part of that
	the real hard part here is determining validity
		full loop
		intersecting sides
			not too bad
		nested drawings
			I have no idea how
			maybe check all the curves to see which are connected?
				maybe I should refine my curves to have the previous and next curve
					It would fix the problem of disconnected endings
				for each curve group, check which side of the side each vertex is on
					if they are all the same you know which side is which?
						does it work for concave polygons?
		over/under size
		
fix camera so that it follows the character
	requires keeping track of camera settings and rebuilding the mat4 when resizing window
	I am thinking having camera object that store the variables.
		Camera interface has the following methods
			getMatrix();
			setViewport(Dimension size) //name still in progress
		the separate implementations (ortho and perspective) have their own variables such as near and far z axis, field of view, position, etc.
		a special not has to be taken to store the projection and position of a camera separately, because the projection matrix must be only the projection or things get messy fast.