Level has 2 parts: a creative part and the playthrough part. There needs to be enough integration to prevent code duplication and also allow seamless transitions between. Maybe There is no distinction and the only diference is the UI. With the only diference being the UI and a few other things like camera, seamless transition is perfect. Level has to have the physics engine/box2dworld. It also has to have the Player. What is the Player? Is it an extension of Entity? Is it some entirely separate class with an Entity inside of it? Player has to have input, some form of entity, and a strong tie to Level. The input needs to directly tie into impulses/forces on the character in order for it to move.

A new idea I had just now is to make Level hold lots of shit. It makes sense really; it will be able to save the level, manage loading, have lists of entities, and more. I also allows for moving lots of the logic into a more compartmentalized structure. Because of the compartmentalization, async loading of levels can be done. Preloading levels can save tons of time in the long run. Maybe I could do some funky shit with nested levels. Level will contain a physics engine, render context, and a list of entities. 